{
  "swagger": "2.0",
  "info": {
    "title": "ContainerApps API Client",
    "version": "2023-11-02-preview"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/deployments/{deploymentName}/builds": {
      "get": {
        "tags": [
          "DeploymentBuilds"
        ],
        "operationId": "DeploymentBuilds_ListByDeploymentResource",
        "description": "List DeploymentBuild resources by Deployment resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "containerAppName",
            "in": "path",
            "description": "Name of the Container App.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "./Deployments.json#/parameters/DeploymentNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/BuildCollection"
            }
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/deployments/{deploymentName}/builds/{buildName}": {
      "get": {
        "tags": [
          "DeploymentBuilds"
        ],
        "operationId": "DeploymentBuilds_Get",
        "description": "Get a DeploymentBuild resource by name.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "containerAppName",
            "in": "path",
            "description": "Name of the Container App.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "./Deployments.json#/parameters/DeploymentNameParameter"
          },
          {
            "$ref": "#/parameters/BuildNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/BuildResource"
            }
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "DeploymentBuilds"
        ],
        "operationId": "DeploymentBuilds_Delete",
        "description": "Delete a DeploymentBuild resource by name.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "containerAppName",
            "in": "path",
            "description": "Name of the Container App.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "./Deployments.json#/parameters/DeploymentNameParameter"
          },
          {
            "$ref": "#/parameters/BuildNameParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    }
  },
  "definitions": {
    "DeploymentBuildConfiguration": {
      "type": "object",
      "properties": {
        "baseOs": {
          "type": "string",
          "description": "Base OS used to build and run the app."
        },
        "platform": {
          "type": "string",
          "description": "Platform to be used to build and run the app."
        },
        "platformVersion": {
          "type": "string",
          "description": "Platform version to be used to build and run the app."
        },
        "environmentVariables": {
          "type": "array",
          "items": {
            "$ref": "./CommonDefinitions.json#/definitions/EnvironmentVariable"
          },
          "x-ms-identifiers": [
            "name"
          ],
          "description": "List of environment variables to be passed to the build, secrets should not be used in environment variable."
        },
        "preBuildSteps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PreBuildStep"
          },
          "x-ms-identifiers": [],
          "description": "List of steps to perform before the build."
        }
      },
      "description": "Configuration of the DeploymentBuild."
    },
    "DeploymentBuildProperties": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/DeploymentBuildProvisioningState",
          "description": "DeploymentBuild provisioning state.",
          "readOnly": true
        },
        "buildStatus": {
          "$ref": "#/definitions/BuildStatus",
          "description": "Status of the build once it has been provisioned.",
          "readOnly": true
        },
        "destinationContainerRegistry": {
          "$ref": "#/definitions/ContainerRegistryWithCustomImage",
          "description": "Container registry that the final image will be uploaded to."
        },
        "configuration": {
          "$ref": "#/definitions/DeploymentBuildConfiguration",
          "description": "Configuration of the DeploymentBuild."
        },
        "uploadEndpoint": {
          "type": "string",
          "description": "Endpoint to which the source code should be uploaded.",
          "readOnly": true
        },
        "logStreamEndpoint": {
          "type": "string",
          "description": "Endpoint from which the build logs can be streamed.",
          "readOnly": true
        },
        "tokenEndpoint": {
          "type": "string",
          "description": "Endpoint to use to retrieve an authentication token for log streaming and uploading source code.",
          "readOnly": true
        }
      },
      "description": "The build properties."
    },
    "DeploymentBuildResource": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DeploymentBuildProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "description": "Information pertaining to an individual deployment build.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "DeploymentBuildCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeploymentBuildResource"
          },
          "description": "The BuildResource items on this page"
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "description": "The response of a DeploymentBuild Resource list operation.",
      "required": [
        "value"
      ]
    },
    "BuildStatus": {
      "type": "string",
      "description": "Status of the build once it has been provisioned.",
      "enum": [
        "NotStarted",
        "InProgress",
        "Succeeded",
        "Canceled",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "BuildStatus",
        "modelAsString": true
      }
    },
    "ContainerRegistryWithCustomImage": {
      "type": "object",
      "properties": {
        "server": {
          "type": "string",
          "description": "Login server of the container registry that the final image should be uploaded to. Deployment resource needs to have this container registry defined along with an identity to use to access it."
        },
        "image": {
          "type": "string",
          "description": "Full name that the final image should be uploaded as, including both image name and tag."
        }
      },
      "description": "Container registry that the final image will be uploaded to.",
      "required": [
        "server"
      ]
    },
    "DeploymentBuildToken": {
      "description": "DeploymentBuild Auth Token.",
      "type": "object",
      "properties": {
        "token": {
          "type": "string",
          "x-ms-secret": true,
          "description": "Authentication token.",
          "readOnly": true
        },
        "expires": {
          "format": "date-time",
          "description": "Token expiration date.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "HttpGet": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "description": "URL to make HTTP GET request against."
        },
        "fileName": {
          "type": "string",
          "description": "Name of the file that the request should be saved to."
        },
        "headers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of headers to send with the request."
        }
      },
      "description": "Model representing a http get request.",
      "required": [
        "url"
      ]
    },
    "PreBuildStep": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "Description of the pre-build step."
        },
        "scripts": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of custom commands to run."
        },
        "httpGet": {
          "$ref": "#/definitions/HttpGet",
          "description": "Http get request to send before the build.",
          "x-ms-identifiers": []
        }
      },
      "description": "Model representing a pre-build step."
    },
    "DeploymentBuildProvisioningState": {
      "type": "string",
      "description": "Resource instance provisioning state.",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Creating",
        "Updating",
        "Deleting"
      ],
      "x-ms-enum": {
        "name": "DeploymentBuildProvisioningState",
        "modelAsString": true
      },
      "readOnly": true
    }
  },
  "parameters": {
    "BuildNameParameter": {
      "name": "deploymentBuildName",
      "in": "path",
      "required": true,
      "description": "The name of a build.",
      "minLength": 2,
      "maxLength": 64,
      "type": "string",
      "pattern": "^[-\\w\\._\\(\\)]+$",
      "x-ms-parameter-location": "method"
    }
  }
}
import "@typespec/openapi";
import "@typespec/rest";
import "@typespec/versioning";
import "@azure-tools/typespec-azure-core";
import "@typespec/http";

import "./models.tsp";

namespace Microsoft.BlobStorage;

using TypeSpec.Http;
using TypeSpec.OpenAPI;
using TypeSpec.Rest;
using TypeSpec.Versioning;
using Azure.Core;
using Azure.ClientGenerator.Core;

@route("/?restype=service&comp=properties")
interface BlobServiceProperties {
  @doc("""
  Get the properties of a storage account's Blob service, including properties for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules.
  """)
  @put
  @operationId("Service_SetProperties")
  setServiceProperties(
    @doc("The storage service properties that specifies the analytics and CORS rules to set on the Blob service.")
    @body body: StorageServiceProperties;
    ...TimeoutParameter;
    ...ApiVersionParameter;
    ...ClientRequestIdParameter;
  ): {
    @statusCode statusCode: 202;
    @doc("If a client request id header is sent in the request, this header will be present in the response with the same value.")
    @header `x-ms-client-request-id`?: string;
    @doc("This header uniquely identifies the request that was made and can be used for troubleshooting the request.")
    @header `x-ms-request-id`: string;
    @doc("Indicates the version of the Blob service used to execute the request. This header is returned for requests made against version 2009-09-19 and above.")
    @header `x-ms-version`: string;
  } | StorageError;

  @doc("Retrieves properties of a storage account's Blob service, including properties for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules.")
  @operationId("Service_GetProperties")
  @get
  getServiceProperties(
    ...TimeoutParameter;
    ...ApiVersionParameter;
    ...ClientRequestIdParameter;
  ): {
    @statusCode statusCode: 200;
    @body body: StorageServiceProperties;
    @doc("If a client request id header is sent in the request, this header will be present in the response with the same value.")
    @header `x-ms-client-request-id`?: string;
    @doc("This header uniquely identifies the request that was made and can be used for troubleshooting the request.")
    @header `x-ms-request-id`: string;
    @doc("Indicates the version of the Blob service used to execute the request. This header is returned for requests made against version 2009-09-19 and above.")
    @header `x-ms-version`: string;
  } | StorageError;
}

@route("/?restype=service&comp=stats")
interface BlobServiceStatistics {
  @doc("""
  Retrieves statistics related to replication for the Blob service. It is only available on the secondary location endpoint when read-access geo-redundant replication is enabled for the storage account.
  """)
  @operationId("Service_GetStatistics")
  @get
  getStatistics(
    ...TimeoutParameter;
    ...ApiVersionParameter;
    ...ClientRequestIdParameter;
  ): {
    @statusCode statusCode: 200;
    @body body: StorageServiceStats;
    @doc("If a client request id header is sent in the request, this header will be present in the response with the same value.")
    @header `x-ms-client-request-id`?: string;
    @doc("This header uniquely identifies the request that was made and can be used for troubleshooting the request.")
    @header `x-ms-request-id`: string;
    @doc("Indicates the version of the Blob service used to execute the request. This header is returned for requests made against version 2009-09-19 and above.")
    @header `x-ms-version`: string;
    @doc("UTC date/time value generated by the service that indicates the time at which the response was initiated")
    @encode("date-time-rfc1123")
    @header Date: utcDateTime;
  } | StorageError;
}

@route("/?comp=list")
interface ListContainerSegments {
  @doc("The List Containers Segment operation returns a list of the containers under the specified account")
  @get
  @operationId("Service_ListContainersSegment")
  listContainers(
    ...PrefixParameter;
    ...TimeoutParameter;
    ...MarkerParameter;
    ...MaxResultsParameter;
    ...ApiVersionParameter;
    ...ClientRequestIdParameter;
  ): {
    @statusCode statusCode: 200;
    @body body: ListContainersSegmentResponse;
    @doc("If a client request id header is sent in the request, this header will be present in the response with the same value.")
    @header `x-ms-client-request-id`?: string;
    @doc("This header uniquely identifies the request that was made and can be used for troubleshooting the request.")
    @header `x-ms-request-id`: string;
    @doc("Indicates the version of the Blob service used to execute the request. This header is returned for requests made against version 2009-09-19 and above.")
    @header `x-ms-version`: string;
  } | StorageError;
}

@route("/?restype=service&comp=userdelegationkey")
interface BlobServiceUserDelegationKey {
  @doc("The Get User Delegation Key operation gets the user delegation key for the Blob service. This is only a valid operation when using User Delegation SAS. For more information, see <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/create-user-delegation-sas\">Create a user delegation SAS</a>.")
  @post
  @operationId("Service_GetUserDelegationKey") 
  getUserDelegationKey(
    @doc("The user delegation key info.")
    @body body: KeyInfo;
    ...TimeoutParameter;
    ...ApiVersionParameter;
    ...ClientRequestIdParameter;
  ): {
    @statusCode statusCode: 200;
    @doc("The user delegation key.")
    @body body: UserDelegationKey;
    @doc("If a client request id header is sent in the request, this header will be present in the response with the same value.")
    @header `x-ms-client-request-id`?: string;
    @doc("This header uniquely identifies the request that was made and can be used for troubleshooting the request.")
    @header `x-ms-request-id`: string;
    @doc("Indicates the version of the Blob service used to execute the request. This header is returned for requests made against version 2009-09-19 and above.")
    @header `x-ms-version`: string;
  } | StorageError;
}

@route("/?restype=account&comp=properties")
interface BlobServiceAccountProperties {
  @doc("Returns the sku name and account kind.")
  @get
  @operationId("Service_GetAccountInfo")
  get(
    ...ApiVersionParameter;
  ): {
    @statusCode statusCode: 200;
    @doc("If a client request id header is sent in the request, this header will be present in the response with the same value.")
    @header `x-ms-client-request-id`?: string;
    @doc("This header uniquely identifies the request that was made and can be used for troubleshooting the request.")
    @header `x-ms-request-id`: string;
    @doc("Indicates the version of the Blob service used to execute the request. This header is returned for requests made against version 2009-09-19 and above.")
    @header `x-ms-version`: string;
    @doc("UTC date/time value generated by the service that indicates the time at which the response was initiated")
    @encode("date-time-rfc1123")
    @header Date: utcDateTime;
    @doc("Identifies the sku name of the account.")
    @clientName("SkuName")
    @header `x-ms-sku-name`: SkuName;
    @doc("Identifies the account kind.")
    @clientName("AccountKind")
    @header `x-ms-account-kind`: AccountKind;
    @doc("Version 2019-07-07 and newer. Indicates if the account has a hierarchical namespace enabled.")
    @clientName("IsHierarchicalNamespaceEnabled")
    @header `x-ms-is-hns-enabled`: boolean;
  } | StorageError;
}

@route("/?comp=batch")
interface BlobServiceBatch {
  @doc("The Batch operation allows multiple API calls to be embedded into a single HTTP request.")
  @post
  @operationId("Service_SubmitBatch")
  post(
    @doc("The batch request content")
    @body body: bytes; // TODO: Investigate this type
    ...ContentLengthHeader;
    ...MultipartContentType;
    ...TimeoutParameter;
    ...ApiVersionParameter;
    ...ClientRequestIdParameter;
  ): {
    @statusCode statusCode: 200;
    @doc("The media type of the body of the response. For batch requests, this is multipart/mixed; boundary=batchresponse_GUID")
    @header `Content-Type`: string;
    @doc("This header uniquely identifies the request that was made and can be used for troubleshooting the request.")
    @header `x-ms-request-id`: string;
    @doc("Indicates the version of the Blob service used to execute the request. This header is returned for requests made against version 2009-09-19 and above.")
    @header `x-ms-version`: string;
  } | StorageError;
}

@route("/?comp=blobs")
interface FilterBlobsService {
  @doc("The Filter Blobs operation enables callers to list blobs across all containers whose tags match a given search expression.")
  @get
  @operationId("Service_FilterBlobs")
  listBlobs(
    ...FilterBlobsWhere;
    ...FilterBlobsInclude;
    ...TimeoutParameter;
    ...MarkerParameter;
    ...MaxResultsParameter;
    ...ApiVersionParameter;
    ...ClientRequestIdParameter;
  ): {
    @statusCode statusCode: 200;
    @body body: FilterBlobSegment;
    @doc("If a client request id header is sent in the request, this header will be present in the response with the same value.")
    @header `x-ms-client-request-id`?: string;
    @doc("This header uniquely identifies the request that was made and can be used for troubleshooting the request.")
    @header `x-ms-request-id`: string;
    @doc("Indicates the version of the Blob service used to execute the request. This header is returned for requests made against version 2009-09-19 and above.")
    @header `x-ms-version`: string;
    @doc("UTC date/time value generated by the service that indicates the time at which the response was initiated")
    @encode("date-time-rfc1123")
    @header Date: utcDateTime;
  } | StorageError;
}

@route("/{containerName}?restype=container")
interface ContainerService {
  @doc("Creates a new container under the specified account. If the container with the same name already exists, the operation fails.")
  @put
  @operationId("Container_Create")
  createContainer(
    @doc("The name of the container to create.")
    @path containerName: string;
    ...MetadataParameter;
    ...BlobPublicAccess;
    ...DefaultEncryptionScope;
    ...DenyEncryptionScopeOverride;
    ...TimeoutParameter;
    ...ApiVersionParameter;
    ...ClientRequestIdParameter;
  ): {
    @statusCode statusCode: 201;
    @doc("The ETag contains a value that you can use to perform operations conditionally.")
    @header ETag: string;
    @doc("The date/time that the container was last modified.")
    @encode("date-time-rfc1123")
    @header `Last-Modified`: utcDateTime;
    @doc("If a client request id header is sent in the request, this header will be present in the response with the same value.")
    @header `x-ms-client-request-id`?: string;
    @doc("This header uniquely identifies the request that was made and can be used for troubleshooting the request.")
    @header `x-ms-request-id`: string;
    @doc("Indicates the version of the Blob service used to execute the request. This header is returned for requests made against version 2009-09-19 and above.")
    @header `x-ms-version`: string;
    @doc("UTC date/time value generated by the service that indicates the time at which the response was initiated")
    @encode("date-time-rfc1123")
    @header Date: utcDateTime;
  } | StorageError;
}
